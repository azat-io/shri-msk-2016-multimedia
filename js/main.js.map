{"version":3,"sources":["main.js","main.es6","subtitles-parser.es6"],"names":["initCanvas","ctx","beginPath","fillStyle","fillRect","canvas","width","height","drawPlayButton","drawLoop","drawImage","video","grayScale","startDrawLoop","intervalId","setInterval","fps","stopDrawLoop","clearInterval","undefined","imageData","getImageData","px","data","i","n","length","value","Math","random","r","g","b","v","putImageData","scratch","interference","startPoint","x","floor","y","endPoint","moveTo","lineTo","stroke","strokeStyle","amountOfScratches","fill","playButton","readSubs","e","reader","readAsText","target","files","addEventListener","updateVideo","currentTime","subData","startTime","pause","drawSub","addSubTimeout","parser","fromSrt","result","slice","console","log","isSubShow","leftPadding","topPadding","textWidth","lineHeight","font","text","fillText","subTimeout","setTimeout","play","endTime","clearSubTimeout","clearTimeout","_typeof","Symbol","iterator","obj","constructor","pItems","ms","useMs","replace","regex","split","shift","items","textData","trim","j","push","id","timeMs","toSrt","Array","res","s","isNaN","msTime","parseInt","val","parts","exec","measures","time","toString","join","exports","module","document","querySelector","audio","getContext","offsetWidth","offsetHeight","paused","subInput","FileReader"],"mappings":"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","file":"main.js","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar parser = function () {\n  var pItems = {};\n\n  /**\n   * Converts SubRip subtitles into array of objects\n   * [{\n   *     id:        `Number of subtitle`\n   *     startTime: `Start time of subtitle`\n   *     endTime:   `End time of subtitle\n   *     text: `Text of subtitle`\n   * }]\n   *\n   * @param  {String}  data SubRip suntitles string\n   * @param  {Boolean} ms   Optional: use milliseconds for startTime and endTime\n   * @return {Array}\n   */\n  pItems.fromSrt = function (data, ms) {\n    var useMs = ms ? true : false;\n\n    data = data.replace(/\\r/g, '');\n    var regex = /(\\d+)\\n(\\d{2}:\\d{2}:\\d{2},\\d{3}) --> (\\d{2}:\\d{2}:\\d{2},\\d{3})/g;\n    data = data.split(regex);\n    data.shift();\n\n    var items = [];\n    for (var i = 0; i < data.length; i += 4) {\n      var textData = data[i + 3].trim().split('\\n');\n      if (typeof textData.length !== 'undefined') {\n        for (var j = 0; j < textData.length; j++) {\n          textData[j] = textData[j].trim();\n        }\n      }\n      items.push({\n        id: data[i].trim(),\n        startTime: useMs ? timeMs(data[i + 1].trim()) : data[i + 1].trim(),\n        endTime: useMs ? timeMs(data[i + 2].trim()) : data[i + 2].trim(),\n        text: textData\n      });\n    }\n\n    return items;\n  };\n\n  /**\n   * Converts Array of objects created by this module to SubRip subtitles\n   * @param  {Array}  data\n   * @return {String}      SubRip subtitles string\n   */\n\n  pItems.toSrt = function (data) {\n    if (!data instanceof Array) return '';\n    var res = '';\n\n    for (var i = 0; i < data.length; i++) {\n      var s = data[i];\n\n      if (!isNaN(s.startTime) && !isNaN(s.endTime)) {\n        s.startTime = msTime(parseInt(s.startTime, 10));\n        s.endTime = msTime(parseInt(s.endTime, 10));\n      }\n\n      res += s.id + '\\r\\n';\n      res += s.startTime + ' --> ' + s.endTime + '\\r\\n';\n      res += s.text.replace('\\n', '\\r\\n') + '\\r\\n\\r\\n';\n    }\n\n    return res;\n  };\n\n  var timeMs = function timeMs(val) {\n    var regex = /(\\d+):(\\d{2}):(\\d{2}),(\\d{3})/;\n    var parts = regex.exec(val);\n\n    if (parts === null) {\n      return 0;\n    }\n\n    for (var i = 1; i < 5; i++) {\n      parts[i] = parseInt(parts[i], 10);\n      if (isNaN(parts[i])) parts[i] = 0;\n    }\n\n    // hours + minutes + seconds + ms\n    return parts[1] * 3600000 + parts[2] * 60000 + parts[3] * 1000 + parts[4];\n  };\n\n  var msTime = function msTime(val) {\n    var measures = [3600000, 60000, 1000];\n    var time = [];\n\n    for (var i in measures) {\n      var res = (val / measures[i] >> 0).toString();\n\n      if (res.length < 2) res = '0' + res;\n      val %= measures[i];\n      time.push(res);\n    }\n\n    var ms = val.toString();\n    if (ms.length < 3) {\n      for (i = 0; i <= 3 - ms.length; i++) {\n        ms = '0' + ms;\n      }\n    }\n\n    return time.join(':') + ',' + ms;\n  };\n\n  return pItems;\n}();\n\n// ignore exports for browser\nif ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n  module.exports = parser;\n}\n'use strict';\n\nvar video = document.querySelector('.player__video');\nvar canvas = document.querySelector('.player__canvas');\nvar audio = document.querySelector('.player__audio');\n\nvar ctx = canvas.getContext('2d');\n\n// 41.708 мс. - Длительность одного кадра в видео 24 кадра в секунду\n// Источник: http://cyclowiki.org/wiki/Миллисекунда\nvar fps = 41.708;\n\nvar intervalId = void 0;\n\nvideo.width = canvas.width = video.offsetWidth;\nvideo.height = canvas.height = video.offsetHeight;\ninitCanvas();\n\nfunction initCanvas() {\n  ctx.beginPath();\n  ctx.fillStyle = 'black';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  drawPlayButton();\n}\n\nvideo.addEventListener('play', function () {\n  // Размер видео приравниваем к размеру Canvas\n  startDrawLoop();\n}, false);\n\nvideo.addEventListener('pause', function () {\n  stopDrawLoop();\n}, false);\n\nfunction drawLoop() {\n  ctx.drawImage(video, 0, 0, video.width, video.height);\n  grayScale();\n}\n\nfunction startDrawLoop() {\n  if (typeof intervalId === 'undefined') {\n    intervalId = setInterval(function () {\n      drawLoop();\n    }, fps);\n  }\n}\n\nfunction stopDrawLoop() {\n  if (typeof intervalId !== 'undefined') {\n    clearInterval(intervalId);\n    intervalId = undefined;\n  }\n}\n\nfunction grayScale() {\n  // Экспортируем в Canvas\n  var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  var px = imageData.data;\n\n  // Преобразуем массив, изменяя значения RGB цветов\n  for (var i = 0, n = px.length; i < n; i += 4) {\n    var value = Math.random() + 2;\n\n    var r = px[i];\n    var g = px[i + 1];\n    var b = px[i + 2];\n\n    var v = 0.5 * r + 0.7 * g + 0.4 * b;\n    px[i] = px[i + 1] = px[i + 2] = v * value;\n  }\n  ctx.putImageData(imageData, 0, 0);\n  scratch();\n}\n\nfunction scratch() {\n  // Рисуем царапины на плёнке\n  ctx.beginPath();\n  ctx.strokeStyle = 'rgba(255, 255, 255, 0.2)';\n  var amountOfScratches = Math.floor(Math.random() * (100 - 0 + 1));\n  amountOfScratches -= 97;\n  if (amountOfScratches > 0) {\n    for (var i = 0; i < amountOfScratches; i++) {\n      interference();\n    }\n  }\n  ctx.fill();\n  function interference() {\n    ctx.beginPath();\n    var startPoint = {\n      x: Math.floor(Math.random() * (canvas.width - 1)),\n      y: Math.floor(Math.random() * (canvas.height - 1))\n    };\n\n    var endPoint = {\n      x: startPoint.x,\n      y: Math.floor(Math.random() * (canvas.height - startPoint.y))\n    };\n    ctx.moveTo(startPoint.x, startPoint.y);\n    ctx.lineTo(endPoint.x, endPoint.y);\n    ctx.stroke();\n  }\n}\n\nfunction drawPlayButton() {\n  // Рисуем кнопку Play\n  // Задаём ширину и высоту кнопки\n  var playButton = {\n    width: 60,\n    height: 70\n  };\n  ctx.beginPath();\n  // Отрисовываем и центрируем\n  ctx.moveTo((canvas.width - playButton.width) / 2, (canvas.height - playButton.height) / 2);\n  ctx.lineTo((canvas.width + playButton.width) / 2, canvas.height / 2);\n  ctx.lineTo((canvas.width - playButton.width) / 2, (canvas.height + playButton.height) / 2);\n  ctx.fillStyle = '#fcfcfc';\n  ctx.fill();\n}\n\ncanvas.addEventListener('click', function () {\n  if (isSubShow) {\n    if (audio.paused) {\n      audio.play();\n      drawSub();\n      addSubTimeout();\n    } else {\n      audio.pause();\n      clearSubTimeout();\n      drawPlayButton();\n    }\n  } else {\n    if (video.paused) {\n      // Если видео и звук уже остановлены - по клику продолжить воспроизведение,\n      video.play();\n      audio.play();\n    } else {\n      // В противном случае остановить видео и звук по клику\n      video.pause();\n      audio.pause();\n      drawPlayButton();\n    }\n  }\n});\n\nvar subInput = document.querySelector('.test');\nvar reader = new FileReader();\n\nvar subTimeout = void 0;\n\nsubInput.addEventListener('change', readSubs);\n\nvar subData = void 0;\n\nfunction readSubs(e) {\n  reader.readAsText(e.target.files[0]);\n  reader.addEventListener('load', function () {\n    subData = parser.fromSrt(reader.result, true);\n    subData.slice(1);\n    console.log(subData);\n\n    video.addEventListener('timeupdate', updateVideo);\n\n    function updateVideo() {\n      if (video.currentTime * 1000 >= subData[0].startTime) {\n        video.pause();\n        drawSub();\n        addSubTimeout();\n      }\n    }\n  });\n}\n\nfunction drawSub() {\n  if (!isSubShow) {\n    console.log('time to show!!!!');\n    isSubShow = true;\n    // ctx.beginPath()\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = 'white';\n    var leftPadding = 0.1 * canvas.width;\n    var topPadding = 0.1 * canvas.height;\n    var textWidth = 0.8 * canvas.width;\n    var lineHeight = 24;\n    ctx.font = '1.5em Oranienbaum, serif';\n    for (var i = 0; i < subData[0].text.length; i++) {\n      subData[0].text[i];\n      ctx.fillText(subData[0].text[i], leftPadding, topPadding + lineHeight * i, textWidth);\n    }\n  }\n}\n\nfunction addSubTimeout() {\n  if (typeof subTimeout === 'undefined') {\n    subTimeout = setTimeout(function () {\n      subData = subData.slice(1);\n      video.play();\n      isSubShow = false;\n    }, subData[0].endTime - subData[0].startTime);\n  }\n}\n\nfunction clearSubTimeout() {\n  if (typeof subTimeout !== 'undefined') {\n    clearTimeout(subTimeout);\n    subTimeout = undefined;\n  }\n}\n\nvar isSubShow = false;","'use strict'\n\nconst video = document.querySelector('.player__video')\nconst canvas = document.querySelector('.player__canvas')\nconst audio = document.querySelector('.player__audio')\n\nconst ctx = canvas.getContext('2d')\n\n// 41.708 мс. - Длительность одного кадра в видео 24 кадра в секунду\n// Источник: http://cyclowiki.org/wiki/Миллисекунда\nconst fps = 41.708\n\nlet intervalId\n\nvideo.width = canvas.width = video.offsetWidth\nvideo.height = canvas.height = video.offsetHeight\ninitCanvas()\n\nfunction initCanvas () {\n  ctx.beginPath()\n  ctx.fillStyle = 'black'\n  ctx.fillRect(0, 0, canvas.width, canvas.height)\n  drawPlayButton()\n}\n\nvideo.addEventListener('play', () => {\n  // Размер видео приравниваем к размеру Canvas\n  startDrawLoop()\n}, false)\n\nvideo.addEventListener('pause', () => {\n  stopDrawLoop()\n}, false)\n\nfunction drawLoop () {\n  ctx.drawImage(video, 0, 0, video.width, video.height)\n  grayScale()\n}\n\nfunction startDrawLoop () {\n  if (typeof intervalId === 'undefined') {\n    intervalId = setInterval(() => {\n      drawLoop()\n    }, fps)\n  }\n}\n\nfunction stopDrawLoop () {\n  if (typeof intervalId !== 'undefined') {\n    clearInterval(intervalId)\n    intervalId = undefined\n  }\n}\n\nfunction grayScale () {\n // Экспортируем в Canvas\n  let imageData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n  let px = imageData.data\n\n  // Преобразуем массив, изменяя значения RGB цветов\n  for (let i = 0, n = px.length; i < n; i += 4) {\n    let value = Math.random() + 2\n\n    let r = px[i]\n    let g = px[i + 1]\n    let b = px[i + 2]\n\n    let v = 0.5 * r + 0.7 * g + 0.4 * b\n    px[i] = px[i + 1] = px[i + 2] = v * value\n  }\n  ctx.putImageData(imageData, 0, 0)\n  scratch()\n}\n\nfunction scratch () {\n  // Рисуем царапины на плёнке\n  ctx.beginPath()\n  ctx.strokeStyle = 'rgba(255, 255, 255, 0.2)'\n  let amountOfScratches = Math.floor(Math.random() * (100 - 0 + 1))\n  amountOfScratches -= 97\n  if (amountOfScratches > 0) {\n    for (let i = 0; i < amountOfScratches; i++) {\n      interference()\n    }\n  }\n  ctx.fill()\n  function interference () {\n    ctx.beginPath()\n    let startPoint = {\n      x: Math.floor(Math.random() * (canvas.width - 1)),\n      y: Math.floor(Math.random() * (canvas.height - 1))\n    }\n\n    let endPoint = {\n      x: startPoint.x,\n      y: Math.floor(Math.random() * (canvas.height - startPoint.y))\n    }\n    ctx.moveTo(startPoint.x, startPoint.y)\n    ctx.lineTo(endPoint.x, endPoint.y)\n    ctx.stroke()\n  }\n}\n\nfunction drawPlayButton () {\n  // Рисуем кнопку Play\n  // Задаём ширину и высоту кнопки\n  let playButton = {\n    width: 60,\n    height: 70\n  }\n  ctx.beginPath()\n  // Отрисовываем и центрируем\n  ctx.moveTo(\n    (canvas.width - playButton.width) / 2,\n    (canvas.height - playButton.height) / 2)\n  ctx.lineTo(\n    (canvas.width + playButton.width) / 2,\n    canvas.height / 2)\n  ctx.lineTo(\n    (canvas.width - playButton.width) / 2,\n    (canvas.height + playButton.height) / 2)\n  ctx.fillStyle = '#fcfcfc'\n  ctx.fill()\n}\n\ncanvas.addEventListener('click', () => {\n  if (isSubShow) {\n    if (audio.paused) {\n      audio.play()\n      drawSub()\n      addSubTimeout()\n    } else {\n      audio.pause()\n      clearSubTimeout()\n      drawPlayButton()\n    }\n  } else {\n    if (video.paused) {\n      // Если видео и звук уже остановлены - по клику продолжить воспроизведение,\n      video.play()\n      audio.play()\n    } else {\n      // В противном случае остановить видео и звук по клику\n      video.pause()\n      audio.pause()\n      drawPlayButton()\n    }\n  }\n})\n\nconst subInput = document.querySelector('.test')\nconst reader = new FileReader()\n\nlet subTimeout\n\nsubInput.addEventListener('change', readSubs)\n\nlet subData\n\nfunction readSubs (e) {\n  reader.readAsText(e.target.files[0])\n  reader.addEventListener('load', () => {\n    subData = parser.fromSrt(reader.result, true)\n    subData.slice(1)\n    console.log(subData)\n\n    video.addEventListener('timeupdate', updateVideo)\n\n    function updateVideo () {\n      if (video.currentTime * 1000 >= subData[0].startTime) {\n        video.pause()\n        drawSub()\n        addSubTimeout()\n      }\n    }\n  })\n}\n\nfunction drawSub () {\n  if (!isSubShow) {\n    console.log('time to show!!!!')\n    isSubShow = true\n    // ctx.beginPath()\n    ctx.fillStyle = 'black'\n    ctx.fillRect(0, 0, canvas.width, canvas.height)\n    ctx.fillStyle = 'white'\n    let leftPadding = 0.1 * canvas.width\n    let topPadding = 0.1 * canvas.height\n    let textWidth = 0.8 * canvas.width\n    let lineHeight = 24\n    ctx.font = '1.5em Oranienbaum, serif'\n    for (var i = 0; i < subData[0].text.length; i++) {\n      subData[0].text[i]\n      ctx.fillText(subData[0].text[i], leftPadding, topPadding + lineHeight * i, textWidth)\n    }\n  }\n}\n\nfunction addSubTimeout () {\n  if (typeof subTimeout === 'undefined') {\n    subTimeout = setTimeout(function () {\n      subData = subData.slice(1)\n      video.play()\n      isSubShow = false\n    }, subData[0].endTime - subData[0].startTime)\n  }\n}\n\nfunction clearSubTimeout() {\n  if (typeof subTimeout !== 'undefined') {\n    clearTimeout(subTimeout)\n    subTimeout = undefined\n  }\n}\n\nlet isSubShow = false\n","var parser = (function () {\n  var pItems = {}\n\n    /**\n     * Converts SubRip subtitles into array of objects\n     * [{\n     *     id:        `Number of subtitle`\n     *     startTime: `Start time of subtitle`\n     *     endTime:   `End time of subtitle\n     *     text: `Text of subtitle`\n     * }]\n     *\n     * @param  {String}  data SubRip suntitles string\n     * @param  {Boolean} ms   Optional: use milliseconds for startTime and endTime\n     * @return {Array}\n     */\n     pItems.fromSrt = function (data, ms) {\n       var useMs = ms ? true : false\n\n       data = data.replace(/\\r/g, '')\n       var regex = /(\\d+)\\n(\\d{2}:\\d{2}:\\d{2},\\d{3}) --> (\\d{2}:\\d{2}:\\d{2},\\d{3})/g\n       data = data.split(regex)\n       data.shift()\n\n       var items = []\n       for (var i = 0; i < data.length; i += 4) {\n         let textData = data[i + 3].trim().split('\\n')\n         if (typeof textData.length !== 'undefined') {\n           for (var j = 0; j < textData.length; j++) {\n             textData[j] = textData[j].trim()\n           }\n         }\n         items.push({\n           id: data[i].trim(),\n           startTime: useMs ? timeMs(data[i + 1].trim()) : data[i + 1].trim(),\n           endTime: useMs ? timeMs(data[i + 2].trim()) : data[i + 2].trim(),\n           text: textData\n         })\n       }\n\n    return items\n  }\n\n\n    /**\n     * Converts Array of objects created by this module to SubRip subtitles\n     * @param  {Array}  data\n     * @return {String}      SubRip subtitles string\n     */\n\n  pItems.toSrt = function (data) {\n    if (!data instanceof Array) return ''\n    var res = ''\n\n    for (var i = 0; i < data.length; i++) {\n      var s = data[i]\n\n      if (!isNaN(s.startTime) && !isNaN(s.endTime)) {\n        s.startTime = msTime(parseInt(s.startTime, 10))\n        s.endTime = msTime(parseInt(s.endTime, 10))\n      }\n\n      res += s.id + '\\r\\n'\n      res += s.startTime + ' --> ' + s.endTime + '\\r\\n'\n      res += s.text.replace('\\n', '\\r\\n') + '\\r\\n\\r\\n'\n    }\n\n    return res\n  }\n\n  var timeMs = function (val) {\n    var regex = /(\\d+):(\\d{2}):(\\d{2}),(\\d{3})/\n    var parts = regex.exec(val)\n\n    if (parts === null) {\n      return 0\n    }\n\n    for (var i = 1; i < 5; i++) {\n      parts[i] = parseInt(parts[i], 10)\n      if (isNaN(parts[i])) parts[i] = 0\n    }\n\n    // hours + minutes + seconds + ms\n    return parts[1] * 3600000 + parts[2] * 60000 + parts[3] * 1000 + parts[4]\n  }\n\n  var msTime = function (val) {\n    var measures = [ 3600000, 60000, 1000 ]\n    var time = []\n\n    for (var i in measures) {\n      var res = (val / measures[i] >> 0).toString()\n\n      if (res.length < 2) res = '0' + res\n      val %= measures[i]\n      time.push(res)\n    }\n\n    var ms = val.toString()\n    if (ms.length < 3) {\n      for (i = 0; i <= 3 - ms.length; i++) ms = '0' + ms\n    }\n\n    return time.join(':') + ',' + ms\n  }\n\n  return pItems\n})()\n\n// ignore exports for browser\nif (typeof exports === 'object') {\n  module.exports = parser\n}\n"],"sourceRoot":"/source/"}